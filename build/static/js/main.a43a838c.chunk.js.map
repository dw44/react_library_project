{"version":3,"sources":["components/AddBook/AddBook.module.css","components/Header/Header.module.css","components/Books/Books.module.css","components/Book/Book.module.css","components/Header/Header.js","components/Book/Book.js","components/Books/Books.js","redux/actionCreators.js","redux/types.js","components/AddBook/AddBook.js","App.js","redux/reducers.js","redux/configureStore.js","components/Root/Root.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","classes","Title","AddBook","onClick","toggleForm","formVisible","Book","BookCard","BookAttribute","title","by","author","read","Button","remove","changeRead","Books","books","this","map","book","key","id","pages","changeStatus","deleteBook","Component","connect","state","dispatch","type","payload","removeBook","uuid","handleSubmit","e","preventDefault","add","setState","document","querySelector","checked","hideForm","Form","onSubmit","FormElement","Label","htmlFor","placeholder","onChange","target","value","required","min","Radio","name","Boolean","Submit","addBook","App","showForm","prevState","toggleFormDisplay","bind","initialState","localStorage","length","library","JSON","parse","updateLocalStorage","clear","setItem","stringify","addHandler","action","updatedState","removeHandler","filter","editReadStatusHandler","forEach","rootReducer","configureStore","createStore","Root","store","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a43a838c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddBook_Form__3DK0X\",\"FormElement\":\"AddBook_FormElement__3YwoP\",\"Label\":\"AddBook_Label__ODAxK\",\"Radio\":\"AddBook_Radio__25KR5\",\"Submit\":\"AddBook_Submit__21b-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3CJYR\",\"Title\":\"Header_Title___4ckL\",\"AddBook\":\"Header_AddBook__32eHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Books\":\"Books_Books__3caOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookCard\":\"Book_BookCard__3n918\",\"BookAttribute\":\"Book_BookAttribute__2PZmu\",\"by\":\"Book_by__3tVK0\",\"Button\":\"Book_Button__16Arc\"};","import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = props => {\r\n  return(\r\n    <header className={classes.Header}>\r\n      <h1 className={classes.Title}>The Odin Library</h1>\r\n      <button \r\n        className={classes.AddBook}\r\n        onClick={props.toggleForm}\r\n      >{props.formVisible ? 'Hide Form' : 'Add Book'}</button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport classes from './Book.module.css';\r\n\r\n\r\nconst Book = props => {\r\n  return (\r\n    <div className={classes.BookCard}>\r\n      <p className={classes.BookAttribute}>{props.title}</p>\r\n      <p className={classes.BookAttribute}><span className={classes.by}>by</span> {props.author}</p>\r\n      <p>Read: {(props.read === true || props.read === 'true') ? 'Yes' : 'No'}</p>\r\n      <button className={classes.Button} onClick={props.remove}>Delete</button>\r\n      <button className={classes.Button} onClick={props.changeRead}>Change Read Status</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeBook, changeRead } from '../../redux/actionCreators';\r\nimport Book from '../Book/Book';\r\nimport classes from './Books.module.css';\r\n\r\nclass Books extends Component {\r\n  render() {\r\n    const books = this.props.books.map(book => (\r\n      <Book\r\n        key={book.id}\r\n        id={book.id}\r\n        title={book.title}\r\n        author={book.author}\r\n        pages={book.pages}\r\n        read={book.read}\r\n        changeRead={() => this.props.changeStatus(book.id)}\r\n        remove={() => this.props.deleteBook(book.id)}\r\n      />\r\n    ));\r\n    return (\r\n      <div className={classes.Books}>\r\n        {books}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeStatus: id => dispatch(changeRead(id)),\r\n    deleteBook: id => dispatch(removeBook(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\r\n","import * as types from './types';\r\n\r\nexport const addBook = book => ({\r\n  type: types.ADD_BOOK,\r\n  payload: {...book}\r\n});\r\n\r\nexport const removeBook = id => ({\r\n  type: types.REMOVE_BOOK,\r\n  payload: id\r\n});\r\n\r\nexport const changeRead = id => ({\r\n  type: types.CHANGE_READ_STATUS,\r\n  payload: id\r\n});","export const ADD_BOOK = 'ADD_BOOK';\r\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\r\nexport const CHANGE_READ_STATUS = 'CHANGE_READ_STATUS';\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addBook } from '../../redux/actionCreators';\r\nimport classes from './AddBook.module.css';\r\n\r\nclass AddBook extends Component {\r\n  state = {\r\n    id: uuid(),\r\n    title: '',\r\n    author: '',\r\n    pages: 1,\r\n    read: false\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.add(this.state);\r\n    this.setState({\r\n      id: uuid(),\r\n      title: '',\r\n      author: '',\r\n      pages: 1,\r\n      read: false\r\n    });\r\n    document.querySelector('#yes').checked = false;\r\n    document.querySelector('#no').checked = false;\r\n    this.props.hideForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className={classes.Form} onSubmit={this.handleSubmit}>\r\n        <div className={classes.FormElement}>\r\n          <label className={classes.Label} htmlFor=\"title\">Title</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"title\" \r\n            placeholder=\"Title\"\r\n            onChange={e => this.setState({title: e.target.value})} \r\n            value={this.state.title} \r\n            required/>\r\n        </div>\r\n        <div className={classes.FormElement}>\r\n          <label className={classes.Label} htmlFor=\"author\">Author</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"author\" \r\n            placeholder=\"Author\"\r\n            onChange={e => this.setState({author: e.target.value})} \r\n            value={this.state.author} \r\n            required/>\r\n        </div>\r\n        <div className={classes.FormElement}>\r\n          <label className={classes.Label} htmlFor=\"pages\">Pages</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"pages\" \r\n            min=\"1\" \r\n            onChange={e => this.setState({pages: e.target.value})} \r\n            value={this.state.pages} \r\n            required/>\r\n        </div>\r\n        <div className={classes.Radio}>\r\n            <p className={classes.Label}>Read?</p>\r\n            <label className={classes.Label} htmlFor=\"yes\">Yes</label>\r\n            <input \r\n              type=\"radio\" \r\n              name=\"read\" \r\n              id=\"yes\" \r\n              value={true} \r\n              onChange={e => this.setState({read: Boolean(e.target.value)})}\r\n              required/>\r\n            <label className={classes.Label} htmlFor=\"no\">No</label>\r\n            <input \r\n              type=\"radio\" \r\n              name=\"read\" \r\n              id=\"no\" \r\n              value={false}\r\n              onChange={e => this.setState({read: Boolean(e.target.value)})}\r\n              checked\r\n              required/>\r\n        </div>\r\n        <input className={classes.Submit} type=\"submit\" value=\"Submit\"/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    add: book => dispatch(addBook(book))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddBook);\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Books from './components/Books/Books';\r\nimport AddBook from './components/AddBook/AddBook';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    showForm: false\r\n  }\r\n\r\n  toggleFormDisplay() {\r\n    this.setState(prevState => {\r\n      return {showForm: !prevState.showForm}\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header \r\n          toggleForm={() => this.toggleFormDisplay()}\r\n          formVisible={this.state.showForm}  \r\n        />\r\n        {this.state.showForm ? <AddBook hideForm={this.toggleFormDisplay.bind(this)} /> : null}\r\n        <Books />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-fallthrough */\r\nimport * as types from './types';\r\n\r\n// part after && in parens below should be removed when the 3 builtin book items are removed\r\nexport const initialState = (localStorage.length > 0 && localStorage.library !== '[]') ? [...JSON.parse(localStorage.library)] : [\r\n  {id: 'c482f0f3-7a84-4c4d-bd60-feb7c9908351', title: 'Eloquent JavaScript',\r\n    author: 'Marijn Haverbeke', pages: 448, read: true},\r\n  {id: '71f6dc97-ae31-4140-a4f0-1068d180a018', title: 'CODE', \r\n    author: 'Charles Petzold', pages: 391, read: true},\r\n  {id: 'ade67292-d0cd-4010-a6ac-25de9c4546fc', title: '30 Days of React',\r\n    author: 'Avi Lerner', pages: 304, read: true}\r\n]; // Emp\r\n\r\nconst updateLocalStorage = library => {\r\n  localStorage.clear();\r\n  localStorage.setItem('library', JSON.stringify(library));\r\n}\r\n\r\nconst addHandler = (state, action) => {\r\n  const updatedState = [...state, action.payload]; \r\n  updateLocalStorage(updatedState);\r\n  return updatedState;\r\n}\r\n\r\nconst removeHandler = (state, action) => {\r\n  const updatedState = state.filter(book => book.id !== action.payload); \r\n  updateLocalStorage(updatedState);\r\n  return updatedState;\r\n}\r\n\r\nconst editReadStatusHandler = (state, action) => {\r\n  const updatedState = [...state];\r\n  updatedState.forEach(book => {\r\n    if (book.id === action.payload) {\r\n      book.read = !book.read;\r\n    }\r\n  });\r\n  updateLocalStorage(updatedState);\r\n  return updatedState;\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.ADD_BOOK:\r\n      return addHandler(state, action);\r\n    case types.REMOVE_BOOK:\r\n      return removeHandler(state, action);\r\n    case types.CHANGE_READ_STATUS:\r\n      return editReadStatusHandler(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\t\r\n\t}\r\n}","import { createStore } from 'redux';\r\nimport { rootReducer, initialState } from './reducers';\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport App from '../../App';\r\nimport configureStore from '../../redux/configureStore';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst Root = props => {\r\n  const store = configureStore();\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/Root/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}